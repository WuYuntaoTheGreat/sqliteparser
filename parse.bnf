// Reprint of input file "sqlit3/parse.y".
// Symbols:
//   0 $                      127 GROUP                 
//   1 SEMI                   128 HAVING                
//   2 EXPLAIN                129 LIMIT                 
//   3 QUERY                  130 WHERE                 
//   4 PLAN                   131 INTO                  
//   5 BEGIN                  132 INTEGER               
//   6 TRANSACTION            133 FLOAT                 
//   7 DEFERRED               134 BLOB                  
//   8 IMMEDIATE              135 VARIABLE              
//   9 EXCLUSIVE              136 CASE                  
//  10 COMMIT                 137 WHEN                  
//  11 END                    138 THEN                  
//  12 ROLLBACK               139 ELSE                  
//  13 SAVEPOINT              140 INDEX                 
//  14 RELEASE                141 ALTER                 
//  15 TO                     142 ADD                   
//  16 TABLE                  143 error                 
//  17 CREATE                 144 input                 
//  18 IF                     145 cmdlist               
//  19 NOT                    146 ecmd                  
//  20 EXISTS                 147 explain               
//  21 TEMP                   148 cmdx                  
//  22 LP                     149 cmd                   
//  23 RP                     150 transtype             
//  24 AS                     151 trans_opt             
//  25 WITHOUT                152 nm                    
//  26 COMMA                  153 savepoint_opt         
//  27 ID                     154 create_table          
//  28 INDEXED                155 create_table_args     
//  29 ABORT                  156 createkw              
//  30 ACTION                 157 temp                  
//  31 AFTER                  158 ifnotexists           
//  32 ANALYZE                159 dbnm                  
//  33 ASC                    160 columnlist            
//  34 ATTACH                 161 conslist_opt          
//  35 BEFORE                 162 table_options         
//  36 BY                     163 select                
//  37 CASCADE                164 column                
//  38 CAST                   165 columnid              
//  39 COLUMNKW               166 type                  
//  40 CONFLICT               167 carglist              
//  41 DATABASE               168 typetoken             
//  42 DESC                   169 typename              
//  43 DETACH                 170 signed                
//  44 EACH                   171 plus_num              
//  45 FAIL                   172 minus_num             
//  46 FOR                    173 ccons                 
//  47 IGNORE                 174 term                  
//  48 INITIALLY              175 expr                  
//  49 INSTEAD                176 onconf                
//  50 LIKE_KW                177 sortorder             
//  51 MATCH                  178 autoinc               
//  52 NO                     179 idxlist_opt           
//  53 KEY                    180 refargs               
//  54 OF                     181 defer_subclause       
//  55 OFFSET                 182 refarg                
//  56 PRAGMA                 183 refact                
//  57 RAISE                  184 init_deferred_pred_opt
//  58 RECURSIVE              185 conslist              
//  59 REPLACE                186 tconscomma            
//  60 RESTRICT               187 tcons                 
//  61 ROW                    188 idxlist               
//  62 TRIGGER                189 defer_subclause_opt   
//  63 VACUUM                 190 orconf                
//  64 VIEW                   191 resolvetype           
//  65 VIRTUAL                192 raisetype             
//  66 WITH                   193 ifexists              
//  67 REINDEX                194 fullname              
//  68 RENAME                 195 selectnowith          
//  69 CTIME_KW               196 oneselect             
//  70 ANY                    197 with                  
//  71 OR                     198 multiselect_op        
//  72 AND                    199 distinct              
//  73 IS                     200 selcollist            
//  74 BETWEEN                201 from                  
//  75 IN                     202 where_opt             
//  76 ISNULL                 203 groupby_opt           
//  77 NOTNULL                204 having_opt            
//  78 NE                     205 orderby_opt           
//  79 EQ                     206 limit_opt             
//  80 GT                     207 values                
//  81 LE                     208 nexprlist             
//  82 LT                     209 exprlist              
//  83 GE                     210 sclp                  
//  84 ESCAPE                 211 as                    
//  85 BITAND                 212 seltablist            
//  86 BITOR                  213 stl_prefix            
//  87 LSHIFT                 214 joinop                
//  88 RSHIFT                 215 indexed_opt           
//  89 PLUS                   216 on_opt                
//  90 MINUS                  217 using_opt             
//  91 STAR                   218 joinop2               
//  92 SLASH                  219 idlist                
//  93 REM                    220 sortlist              
//  94 CONCAT                 221 setlist               
//  95 COLLATE                222 insert_cmd            
//  96 BITNOT                 223 inscollist_opt        
//  97 STRING                 224 likeop                
//  98 JOIN_KW                225 between_op            
//  99 CONSTRAINT             226 in_op                 
// 100 DEFAULT                227 case_operand          
// 101 NULL                   228 case_exprlist         
// 102 PRIMARY                229 case_else             
// 103 UNIQUE                 230 uniqueflag            
// 104 CHECK                  231 collate               
// 105 REFERENCES             232 nmnum                 
// 106 AUTOINCR               233 trigger_decl          
// 107 ON                     234 trigger_cmd_list      
// 108 INSERT                 235 trigger_time          
// 109 DELETE                 236 trigger_event         
// 110 UPDATE                 237 foreach_clause        
// 111 SET                    238 when_clause           
// 112 DEFERRABLE             239 trigger_cmd           
// 113 FOREIGN                240 trnm                  
// 114 DROP                   241 tridxby               
// 115 UNION                  242 database_kw_opt       
// 116 ALL                    243 key_opt               
// 117 EXCEPT                 244 add_column_fullname   
// 118 INTERSECT              245 kwcolumn_opt          
// 119 SELECT                 246 create_vtab           
// 120 VALUES                 247 vtabarglist           
// 121 DISTINCT               248 vtabarg               
// 122 DOT                    249 vtabargtoken          
// 123 FROM                   250 lp                    
// 124 JOIN                   251 anylist               
// 125 USING                  252 wqlist                
// 126 ORDER                 
input ::= cmdlist.
cmdlist ::= cmdlist ecmd.
cmdlist ::= ecmd.
ecmd ::= SEMI.
ecmd ::= explain cmdx SEMI.
explain ::=.
explain ::= EXPLAIN.
explain ::= EXPLAIN QUERY PLAN.
cmdx ::= cmd.
cmd ::= BEGIN transtype trans_opt.
trans_opt ::=.
trans_opt ::= TRANSACTION.
trans_opt ::= TRANSACTION nm.
transtype ::=.
transtype ::= DEFERRED.
transtype ::= IMMEDIATE.
transtype ::= EXCLUSIVE.
cmd ::= COMMIT trans_opt.
cmd ::= END trans_opt.
cmd ::= ROLLBACK trans_opt.
savepoint_opt ::= SAVEPOINT.
savepoint_opt ::=.
cmd ::= SAVEPOINT nm.
cmd ::= RELEASE savepoint_opt nm.
cmd ::= ROLLBACK trans_opt TO savepoint_opt nm.
cmd ::= create_table create_table_args.
create_table ::= createkw temp TABLE ifnotexists nm dbnm.
createkw ::= CREATE.
ifnotexists ::=.
ifnotexists ::= IF NOT EXISTS.
temp ::= TEMP.
temp ::=.
create_table_args ::= LP columnlist conslist_opt RP table_options.
create_table_args ::= AS select.
table_options ::=.
table_options ::= WITHOUT nm.
columnlist ::= columnlist COMMA column.
columnlist ::= column.
column ::= columnid type carglist.
columnid ::= nm.
nm ::= ID|INDEXED.
nm ::= STRING.
nm ::= JOIN_KW.
type ::=.
type ::= typetoken.
typetoken ::= typename.
typetoken ::= typename LP signed RP.
typetoken ::= typename LP signed COMMA signed RP.
typename ::= ID|STRING.
typename ::= typename ID|STRING.
signed ::= plus_num.
signed ::= minus_num.
carglist ::= carglist ccons.
carglist ::=.
ccons ::= CONSTRAINT nm.
ccons ::= DEFAULT term.
ccons ::= DEFAULT LP expr RP.
ccons ::= DEFAULT PLUS term.
ccons ::= DEFAULT MINUS term.
ccons ::= DEFAULT ID|INDEXED.
ccons ::= NULL onconf.
ccons ::= NOT NULL onconf.
ccons ::= PRIMARY KEY sortorder onconf autoinc.
ccons ::= UNIQUE onconf.
ccons ::= CHECK LP expr RP.
ccons ::= REFERENCES nm idxlist_opt refargs.
ccons ::= defer_subclause.
ccons ::= COLLATE ID|STRING.
autoinc ::=.
autoinc ::= AUTOINCR.
refargs ::=.
refargs ::= refargs refarg.
refarg ::= MATCH nm.
refarg ::= ON INSERT refact.
refarg ::= ON DELETE refact.
refarg ::= ON UPDATE refact.
refact ::= SET NULL.
refact ::= SET DEFAULT.
refact ::= CASCADE.
refact ::= RESTRICT.
refact ::= NO ACTION.
defer_subclause ::= NOT DEFERRABLE init_deferred_pred_opt.
defer_subclause ::= DEFERRABLE init_deferred_pred_opt.
init_deferred_pred_opt ::=.
init_deferred_pred_opt ::= INITIALLY DEFERRED.
init_deferred_pred_opt ::= INITIALLY IMMEDIATE.
conslist_opt ::=.
conslist_opt ::= COMMA conslist.
conslist ::= conslist tconscomma tcons.
conslist ::= tcons.
tconscomma ::= COMMA.
tconscomma ::=.
tcons ::= CONSTRAINT nm.
tcons ::= PRIMARY KEY LP idxlist autoinc RP onconf.
tcons ::= UNIQUE LP idxlist RP onconf.
tcons ::= CHECK LP expr RP onconf.
tcons ::= FOREIGN KEY LP idxlist RP REFERENCES nm idxlist_opt refargs defer_subclause_opt.
defer_subclause_opt ::=.
defer_subclause_opt ::= defer_subclause.
onconf ::=.
onconf ::= ON CONFLICT resolvetype.
orconf ::=.
orconf ::= OR resolvetype.
resolvetype ::= raisetype.
resolvetype ::= IGNORE.
resolvetype ::= REPLACE.
cmd ::= DROP TABLE ifexists fullname.
ifexists ::= IF EXISTS.
ifexists ::=.
cmd ::= createkw temp VIEW ifnotexists nm dbnm AS select.
cmd ::= DROP VIEW ifexists fullname.
cmd ::= select.
select ::= with selectnowith.
selectnowith ::= oneselect.
selectnowith ::= selectnowith multiselect_op oneselect.
multiselect_op ::= UNION.
multiselect_op ::= UNION ALL.
multiselect_op ::= EXCEPT|INTERSECT.
oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt.
oneselect ::= values.
values ::= VALUES LP nexprlist RP.
values ::= values COMMA LP exprlist RP.
distinct ::= DISTINCT.
distinct ::= ALL.
distinct ::=.
sclp ::= selcollist COMMA.
sclp ::=.
selcollist ::= sclp expr as.
selcollist ::= sclp STAR.
selcollist ::= sclp nm DOT STAR.
as ::= AS nm.
as ::= ID|STRING.
as ::=.
from ::=.
from ::= FROM seltablist.
stl_prefix ::= seltablist joinop.
stl_prefix ::=.
seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt.
seltablist ::= stl_prefix nm dbnm LP exprlist RP as on_opt using_opt.
seltablist ::= stl_prefix LP select RP as on_opt using_opt.
seltablist ::= stl_prefix LP seltablist RP as on_opt using_opt.
dbnm ::=.
dbnm ::= DOT nm.
fullname ::= nm dbnm.
joinop ::= COMMA|JOIN.
joinop ::= JOIN_KW JOIN.
joinop ::= JOIN_KW nm JOIN.
joinop ::= JOIN_KW nm nm JOIN.
on_opt ::= ON expr.
on_opt ::=.
indexed_opt ::=.
indexed_opt ::= INDEXED BY nm.
indexed_opt ::= NOT INDEXED.
using_opt ::= USING LP idlist RP.
using_opt ::=.
orderby_opt ::=.
orderby_opt ::= ORDER BY sortlist.
sortlist ::= sortlist COMMA expr sortorder.
sortlist ::= expr sortorder.
sortorder ::= ASC.
sortorder ::= DESC.
sortorder ::=.
groupby_opt ::=.
groupby_opt ::= GROUP BY nexprlist.
having_opt ::=.
having_opt ::= HAVING expr.
limit_opt ::=.
limit_opt ::= LIMIT expr.
limit_opt ::= LIMIT expr OFFSET expr.
limit_opt ::= LIMIT expr COMMA expr.
cmd ::= with DELETE FROM fullname indexed_opt where_opt.
where_opt ::=.
where_opt ::= WHERE expr.
cmd ::= with UPDATE orconf fullname indexed_opt SET setlist where_opt.
setlist ::= setlist COMMA nm EQ expr.
setlist ::= nm EQ expr.
cmd ::= with insert_cmd INTO fullname inscollist_opt select.
cmd ::= with insert_cmd INTO fullname inscollist_opt DEFAULT VALUES.
insert_cmd ::= INSERT orconf.
insert_cmd ::= REPLACE.
inscollist_opt ::=.
inscollist_opt ::= LP idlist RP.
idlist ::= idlist COMMA nm.
idlist ::= nm.
expr ::= term.
expr ::= LP expr RP.
term ::= NULL.
expr ::= ID|INDEXED.
expr ::= JOIN_KW.
expr ::= nm DOT nm.
expr ::= nm DOT nm DOT nm.
term ::= INTEGER|FLOAT|BLOB.
term ::= STRING.
expr ::= VARIABLE.
expr ::= expr COLLATE ID|STRING.
expr ::= CAST LP expr AS typetoken RP.
expr ::= ID|INDEXED LP distinct exprlist RP.
expr ::= ID|INDEXED LP STAR RP.
term ::= CTIME_KW.
expr ::= expr AND expr.
expr ::= expr OR expr.
expr ::= expr LT|GT|GE|LE expr.
expr ::= expr EQ|NE expr.
expr ::= expr BITAND|BITOR|LSHIFT|RSHIFT expr.
expr ::= expr PLUS|MINUS expr.
expr ::= expr STAR|SLASH|REM expr.
expr ::= expr CONCAT expr.
likeop ::= LIKE_KW|MATCH.
likeop ::= NOT LIKE_KW|MATCH.
expr ::= expr likeop expr. [LIKE_KW]
expr ::= expr likeop expr ESCAPE expr. [LIKE_KW]
expr ::= expr ISNULL|NOTNULL.
expr ::= expr NOT NULL.
expr ::= expr IS expr.
expr ::= expr IS NOT expr.
expr ::= NOT expr.
expr ::= BITNOT expr.
expr ::= MINUS expr. [BITNOT]
expr ::= PLUS expr. [BITNOT]
between_op ::= BETWEEN.
between_op ::= NOT BETWEEN.
expr ::= expr between_op expr AND expr. [BETWEEN]
in_op ::= IN.
in_op ::= NOT IN.
expr ::= expr in_op LP exprlist RP. [IN]
expr ::= LP select RP.
expr ::= expr in_op LP select RP. [IN]
expr ::= expr in_op nm dbnm. [IN]
expr ::= EXISTS LP select RP.
expr ::= CASE case_operand case_exprlist case_else END.
case_exprlist ::= case_exprlist WHEN expr THEN expr.
case_exprlist ::= WHEN expr THEN expr.
case_else ::= ELSE expr.
case_else ::=.
case_operand ::= expr.
case_operand ::=.
exprlist ::= nexprlist.
exprlist ::=.
nexprlist ::= nexprlist COMMA expr.
nexprlist ::= expr.
cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP idxlist RP where_opt.
uniqueflag ::= UNIQUE.
uniqueflag ::=.
idxlist_opt ::=.
idxlist_opt ::= LP idxlist RP.
idxlist ::= idxlist COMMA nm collate sortorder.
idxlist ::= nm collate sortorder.
collate ::=.
collate ::= COLLATE ID|STRING.
cmd ::= DROP INDEX ifexists fullname.
cmd ::= VACUUM.
cmd ::= VACUUM nm.
cmd ::= PRAGMA nm dbnm.
cmd ::= PRAGMA nm dbnm EQ nmnum.
cmd ::= PRAGMA nm dbnm LP nmnum RP.
cmd ::= PRAGMA nm dbnm EQ minus_num.
cmd ::= PRAGMA nm dbnm LP minus_num RP.
nmnum ::= plus_num.
nmnum ::= nm.
nmnum ::= ON.
nmnum ::= DELETE.
nmnum ::= DEFAULT.
plus_num ::= PLUS INTEGER|FLOAT.
plus_num ::= INTEGER|FLOAT.
minus_num ::= MINUS INTEGER|FLOAT.
cmd ::= createkw trigger_decl BEGIN trigger_cmd_list END.
trigger_decl ::= temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause when_clause.
trigger_time ::= BEFORE.
trigger_time ::= AFTER.
trigger_time ::= INSTEAD OF.
trigger_time ::=.
trigger_event ::= DELETE|INSERT.
trigger_event ::= UPDATE.
trigger_event ::= UPDATE OF idlist.
foreach_clause ::=.
foreach_clause ::= FOR EACH ROW.
when_clause ::=.
when_clause ::= WHEN expr.
trigger_cmd_list ::= trigger_cmd_list trigger_cmd SEMI.
trigger_cmd_list ::= trigger_cmd SEMI.
trnm ::= nm.
trnm ::= nm DOT nm.
tridxby ::=.
tridxby ::= INDEXED BY nm.
tridxby ::= NOT INDEXED.
trigger_cmd ::= UPDATE orconf trnm tridxby SET setlist where_opt.
trigger_cmd ::= insert_cmd INTO trnm inscollist_opt select.
trigger_cmd ::= DELETE FROM trnm tridxby where_opt.
trigger_cmd ::= select.
expr ::= RAISE LP IGNORE RP.
expr ::= RAISE LP raisetype COMMA nm RP.
raisetype ::= ROLLBACK.
raisetype ::= ABORT.
raisetype ::= FAIL.
cmd ::= DROP TRIGGER ifexists fullname.
cmd ::= ATTACH database_kw_opt expr AS expr key_opt.
cmd ::= DETACH database_kw_opt expr.
key_opt ::=.
key_opt ::= KEY expr.
database_kw_opt ::= DATABASE.
database_kw_opt ::=.
cmd ::= REINDEX.
cmd ::= REINDEX nm dbnm.
cmd ::= ANALYZE.
cmd ::= ANALYZE nm dbnm.
cmd ::= ALTER TABLE fullname RENAME TO nm.
cmd ::= ALTER TABLE add_column_fullname ADD kwcolumn_opt column.
add_column_fullname ::= fullname.
kwcolumn_opt ::=.
kwcolumn_opt ::= COLUMNKW.
cmd ::= create_vtab.
cmd ::= create_vtab LP vtabarglist RP.
create_vtab ::= createkw VIRTUAL TABLE ifnotexists nm dbnm USING nm.
vtabarglist ::= vtabarg.
vtabarglist ::= vtabarglist COMMA vtabarg.
vtabarg ::=.
vtabarg ::= vtabarg vtabargtoken.
vtabargtoken ::= ANY.
vtabargtoken ::= lp anylist RP.
lp ::= LP.
anylist ::=.
anylist ::= anylist LP anylist RP.
anylist ::= anylist ANY.
with ::=.
with ::= WITH wqlist.
with ::= WITH RECURSIVE wqlist.
wqlist ::= nm idxlist_opt AS LP select RP.
wqlist ::= wqlist COMMA nm idxlist_opt AS LP select RP.
